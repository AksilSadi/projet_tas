# C:\Users\DELL\AppData\Local\opam-testing\default\bin\dune.exe build
# OCAMLPARAM: unset
# Shared cache: disabled
# Shared cache location:
# C:\Users\DELL\AppData\Local\Microsoft\Windows\INetCache\dune\db
# Workspace root: "C:\\Users\\DELL\\OneDrive\\Bureau\\sorbonne\\M2\\projet_tas"
# Auto-detected concurrency: 8
# Dune context:
#  { name = "default"
#  ; kind = "default"
#  ; profile = Dev
#  ; merlin = true
#  ; fdo_target_exe = None
#  ; build_dir = In_build_dir "default"
#  ; instrument_with = []
#  }
$ C:\Users\DELL\AppData\Local\opam-testing\default\bin\ocamlc.opt.exe -config > C:\Users\DELL\AppData\Local\Temp\dune_0df312_output
$ (cd _build/default && C:\Users\DELL\AppData\Local\opam-testing\default\bin\ocamldep.opt.exe -modules -impl src/ast.ml) > _build/default/src/.tas_lib.objs/tas_lib__Ast.impl.d
$ (cd _build/default && C:\Users\DELL\AppData\Local\opam-testing\default\bin\ocamldep.opt.exe -modules -impl src/typer.ml) > _build/default/src/.tas_lib.objs/tas_lib__Typer.impl.d
$ (cd _build/default && C:\Users\DELL\AppData\Local\opam-testing\default\bin\ocamlc.opt.exe -w @1..3@5..28@30..39@43@46..47@49..57@61..62@67@69-40 -strict-sequence -strict-formats -short-paths -keep-locs -g -bin-annot -I src/.tas_lib.objs/byte -no-alias-deps -opaque -open Tas_lib -o src/.tas_lib.objs/byte/tas_lib__Ast.cmo -c -impl src/ast.ml)
$ (cd _build/default && C:\Users\DELL\AppData\Local\opam-testing\default\bin\ocamlc.opt.exe -w @1..3@5..28@30..39@43@46..47@49..57@61..62@67@69-40 -strict-sequence -strict-formats -short-paths -keep-locs -g -bin-annot -I src/.tas_lib.objs/byte -no-alias-deps -opaque -open Tas_lib -o src/.tas_lib.objs/byte/tas_lib__Typer.cmo -c -impl src/typer.ml)
> File "src/typer.ml", lines 57-69, characters 2-28:
> 57 | ..match te with 
> 58 |     Var v -> let tv : ptype = cherche_type v e in [(ty, tv)] 
> 59 |   | App (t1, t2) -> let nv : string = nouvelle_var () in
> 60 |       let eq1 : equa = genere_equa t1 (Arr (Var nv, ty)) e in
> 61 |       let eq2 : equa = genere_equa t2 (Var nv) e in
> ...
> 66 |   | N _ -> [(ty, Nat)]
> 67 |   | Add (t1, t2) -> let eq1 : equa = genere_equa t1 Nat e in
> 68 |       let eq2 : equa = genere_equa t2 Nat e in
> 69 |       (ty, Nat)::(eq1 @ eq2)
> Error (warning 8 [partial-match]): this pattern-matching is not exhaustive.
> Here is an example of a case that is not matched:
> (Ifz (_, _, _)|Succ _|Pred _)
[2]
$ (cd _build/default && C:\Users\DELL\AppData\Local\opam-testing\default\bin\ocamlopt.opt.exe -w @1..3@5..28@30..39@43@46..47@49..57@61..62@67@69-40 -strict-sequence -strict-formats -short-paths -keep-locs -g -I src/.tas_lib.objs/byte -I src/.tas_lib.objs/native -intf-suffix .ml -no-alias-deps -opaque -open Tas_lib -o src/.tas_lib.objs/native/tas_lib__Ast.cmx -c -impl src/ast.ml)
